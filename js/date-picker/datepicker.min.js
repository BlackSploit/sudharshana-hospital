! function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? e(require("jquery")) : "function" == typeof define && define.amd ? define(["jquery"], e) : e((t = t || self).jQuery)
}(this, function(t) {
    "use strict";

    function e(t, e) {
        for (var i = 0; i < e.length; i++) {
            var s = e[i];
            s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
        }
    }
    t = t && t.hasOwnProperty("default") ? t.default : t;
    var i = {
            autoShow: !1,
            autoHide: !1,
            autoPick: !1,
            inline: !1,
            container: null,
            trigger: null,
            language: "",
            format: "mm/dd/yyyy",
            date: null,
            startDate: null,
            endDate: null,
            startView: 0,
            weekStart: 0,
            yearFirst: !1,
            yearSuffix: "",
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            itemTag: "li",
            mutedClass: "muted",
            pickedClass: "picked",
            disabledClass: "disabled",
            highlightedClass: "highlighted",
            template: '<div class="datepicker-container"><div class="datepicker-panel" data-view="years picker"><ul><li data-view="years prev">&lsaquo;</li><li data-view="years current"></li><li data-view="years next">&rsaquo;</li></ul><ul data-view="years"></ul></div><div class="datepicker-panel" data-view="months picker"><ul><li data-view="year prev">&lsaquo;</li><li data-view="year current"></li><li data-view="year next">&rsaquo;</li></ul><ul data-view="months"></ul></div><div class="datepicker-panel" data-view="days picker"><ul><li data-view="month prev">&lsaquo;</li><li data-view="month current"></li><li data-view="month next">&rsaquo;</li></ul><ul data-view="week"></ul><ul data-view="days"></ul></div></div>',
            offset: 10,
            zIndex: 1e3,
            filter: null,
            show: null,
            hide: null,
            pick: null
        },
        s = "undefined" != typeof window,
        a = s ? window : {},
        n = !!s && "ontouchstart" in a.document.documentElement,
        r = "datepicker",
        h = "click.".concat(r),
        o = "focus.".concat(r),
        l = "hide.".concat(r),
        c = "keyup.".concat(r),
        d = "pick.".concat(r),
        u = "resize.".concat(r),
        f = "scroll.".concat(r),
        p = "show.".concat(r),
        g = "touchstart.".concat(r),
        y = "".concat(r, "-hide"),
        v = {},
        m = {
            DAYS: 0,
            MONTHS: 1,
            YEARS: 2
        },
        w = Object.prototype.toString;

    function k(t) {
        return "string" == typeof t
    }
    var _ = Number.isNaN || a.isNaN;

    function D(t) {
        return "number" == typeof t && !_(t)
    }

    function b(t) {
        return void 0 === t
    }

    function $(t) {
        var e;
        return "date" === (e = t, w.call(e).slice(8, -1).toLowerCase()) && !_(t.getTime())
    }

    function C(t, e) {
        for (var i = arguments.length, s = Array(i > 2 ? i - 2 : 0), a = 2; a < i; a++) s[a - 2] = arguments[a];
        return function() {
            for (var i = arguments.length, a = Array(i), n = 0; n < i; n++) a[n] = arguments[n];
            return t.apply(e, s.concat(a))
        }
    }

    function x(t) {
        return '[data-view="'.concat(t, '"]')
    }

    function F(t, e) {
        var i;
        return [31, (i = t) % 4 == 0 && i % 100 != 0 || i % 400 == 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][e]
    }

    function Y(t, e, i) {
        return Math.min(i, F(t, e))
    }
    var M = /(y|m|d)+/g;

    function S(t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
            i = String(Math.abs(t)),
            s = i.length,
            a = "";
        for (t < 0 && (a += "-"); s < e;) s += 1, a += "0";
        return a + i
    }
    var T = /\d+/g,
        V = "".concat(r, "-top-left"),
        P = "".concat(r, "-top-right"),
        I = "".concat(r, "-bottom-left"),
        N = "".concat(r, "-bottom-right"),
        j = [V, P, I, N].join(" "),
        A = function() {
            var s, a, n;

            function u(e) {
                var s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                ! function t(e, i) {
                    if (!(e instanceof i)) throw TypeError("Cannot call a class as a function")
                }(this, u), this.$element = t(e), this.element = e, this.options = t.extend({}, i, v[s.language], t.isPlainObject(s) && s), this.$scrollParent = function e(i) {
                    var s = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        a = t(i),
                        n = a.css("position"),
                        r = "absolute" === n,
                        h = s ? /auto|scroll|hidden/ : /auto|scroll/,
                        o = a.parents().filter(function(e, i) {
                            var s = t(i);
                            return (!r || "static" !== s.css("position")) && h.test(s.css("overflow") + s.css("overflow-y") + s.css("overflow-x"))
                        }).eq(0);
                    return "fixed" !== n && o.length ? o : t(i.ownerDocument || document)
                }(e, !0), this.built = !1, this.shown = !1, this.isInput = !1, this.inline = !1, this.initialValue = "", this.initialDate = null, this.startDate = null, this.endDate = null, this.init()
            }
            return s = u, a = [{
                key: "init",
                value: function e() {
                    var i = this.$element,
                        s = this.options,
                        a = s.startDate,
                        n = s.endDate,
                        r = s.date;
                    this.$trigger = t(s.trigger), this.isInput = i.is("input") || i.is("textarea"), this.inline = s.inline && (s.container || !this.isInput), this.format = function e(i) {
                        var s = String(i).toLowerCase(),
                            a = s.match(M);
                        if (!a || 0 === a.length) throw Error("Invalid date format.");
                        return i = {
                            source: s,
                            parts: a
                        }, t.each(a, function(t, e) {
                            switch (e) {
                                case "dd":
                                case "d":
                                    i.hasDay = !0;
                                    break;
                                case "mm":
                                case "m":
                                    i.hasMonth = !0;
                                    break;
                                case "yyyy":
                                case "yy":
                                    i.hasYear = !0
                            }
                        }), i
                    }(s.format);
                    var h = this.getValue();
                    this.initialValue = h, this.oldValue = h, r = this.parseDate(r || h), a && (a = this.parseDate(a), r.getTime() < a.getTime() && (r = new Date(a)), this.startDate = a), n && (n = this.parseDate(n), a && n.getTime() < a.getTime() && (n = new Date(a)), r.getTime() > n.getTime() && (r = new Date(n)), this.endDate = n), this.date = r, this.viewDate = new Date(r), this.initialDate = new Date(this.date), this.bind(), (s.autoShow || this.inline) && this.show(), s.autoPick && this.pick()
                }
            }, {
                key: "build",
                value: function e() {
                    if (!this.built) {
                        this.built = !0;
                        var i = this.$element,
                            s = this.options,
                            a = t(s.template);
                        this.$picker = a, this.$week = a.find(x("week")), this.$yearsPicker = a.find(x("years picker")), this.$yearsPrev = a.find(x("years prev")), this.$yearsNext = a.find(x("years next")), this.$yearsCurrent = a.find(x("years current")), this.$years = a.find(x("years")), this.$monthsPicker = a.find(x("months picker")), this.$yearPrev = a.find(x("year prev")), this.$yearNext = a.find(x("year next")), this.$yearCurrent = a.find(x("year current")), this.$months = a.find(x("months")), this.$daysPicker = a.find(x("days picker")), this.$monthPrev = a.find(x("month prev")), this.$monthNext = a.find(x("month next")), this.$monthCurrent = a.find(x("month current")), this.$days = a.find(x("days")), this.inline ? t(s.container || i).append(a.addClass("".concat(r, "-inline"))) : (t(document.body).append(a.addClass("".concat(r, "-dropdown"))), a.addClass(y).css({
                            zIndex: parseInt(s.zIndex, 10)
                        })), this.renderWeek()
                    }
                }
            }, {
                key: "unbuild",
                value: function t() {
                    this.built && (this.built = !1, this.$picker.remove())
                }
            }, {
                key: "bind",
                value: function e() {
                    var i = this.options,
                        s = this.$element;
                    t.isFunction(i.show) && s.on(p, i.show), t.isFunction(i.hide) && s.on(l, i.hide), t.isFunction(i.pick) && s.on(d, i.pick), this.isInput && s.on(c, t.proxy(this.keyup, this)), this.inline || (i.trigger ? this.$trigger.on(h, t.proxy(this.toggle, this)) : this.isInput ? s.on(o, t.proxy(this.show, this)) : s.on(h, t.proxy(this.show, this)))
                }
            }, {
                key: "unbind",
                value: function e() {
                    var i = this.$element,
                        s = this.options;
                    t.isFunction(s.show) && i.off(p, s.show), t.isFunction(s.hide) && i.off(l, s.hide), t.isFunction(s.pick) && i.off(d, s.pick), this.isInput && i.off(c, this.keyup), this.inline || (s.trigger ? this.$trigger.off(h, this.toggle) : this.isInput ? i.off(o, this.show) : i.off(h, this.show))
                }
            }, {
                key: "showView",
                value: function t(e) {
                    var i = this.$yearsPicker,
                        s = this.$monthsPicker,
                        a = this.$daysPicker,
                        n = this.format;
                    if (n.hasYear || n.hasMonth || n.hasDay) switch (Number(e)) {
                        case m.YEARS:
                            s.addClass(y), a.addClass(y), n.hasYear ? (this.renderYears(), i.removeClass(y), this.place()) : this.showView(m.DAYS);
                            break;
                        case m.MONTHS:
                            i.addClass(y), a.addClass(y), n.hasMonth ? (this.renderMonths(), s.removeClass(y), this.place()) : this.showView(m.YEARS);
                            break;
                        default:
                            i.addClass(y), s.addClass(y), n.hasDay ? (this.renderDays(), a.removeClass(y), this.place()) : this.showView(m.MONTHS)
                    }
                }
            }, {
                key: "hideView",
                value: function t() {
                    !this.inline && this.options.autoHide && this.hide()
                }
            }, {
                key: "place",
                value: function e() {
                    if (!this.inline) {
                        var i = this.$element,
                            s = this.options,
                            a = this.$picker,
                            n = t(document).outerWidth(),
                            r = t(document).outerHeight(),
                            h = i.outerWidth(),
                            o = i.outerHeight(),
                            l = a.width(),
                            c = a.height(),
                            d = i.offset(),
                            u = d.left,
                            f = d.top,
                            p = parseFloat(s.offset),
                            g = V;
                        _(p) && (p = 10), f > c && f + o + c > r ? (f -= c + p, g = I) : f += o + p, u + l > n && (u += h - l, g = g.replace("left", "right")), a.removeClass(j).addClass(g).css({
                            top: f,
                            left: u
                        })
                    }
                }
            }, {
                key: "trigger",
                value: function e(i, s) {
                    var a = t.Event(i, s);
                    return this.$element.trigger(a), a
                }
            }, {
                key: "createItem",
                value: function e(i) {
                    var s = this.options,
                        a = s.itemTag,
                        n = {
                            text: "",
                            view: "",
                            muted: !1,
                            picked: !1,
                            disabled: !1,
                            highlighted: !1
                        },
                        r = [];
                    return t.extend(n, i), n.muted && r.push(s.mutedClass), n.highlighted && r.push(s.highlightedClass), n.picked && r.push(s.pickedClass), n.disabled && r.push(s.disabledClass), "<".concat(a, ' class="').concat(r.join(" "), '" data-view="').concat(n.view, '">').concat(n.text, "</").concat(a, ">")
                }
            }, {
                key: "getValue",
                value: function t() {
                    var e = this.$element;
                    return this.isInput ? e.val() : e.text()
                }
            }, {
                key: "setValue",
                value: function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                        i = this.$element;
                    this.isInput ? i.val(e) : (!this.inline || this.options.container) && i.text(e)
                }
            }], n = [{
                key: "setDefaults",
                value: function e() {
                    var s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    t.extend(i, v[s.language], t.isPlainObject(s) && s)
                }
            }], a && e(s.prototype, a), n && e(s, n), u
        }();
    if (t.extend && t.extend(A.prototype, {
            render: function t() {
                this.renderYears(), this.renderMonths(), this.renderDays()
            },
            renderWeek: function e() {
                var i = this,
                    s = [],
                    a = this.options,
                    n = a.weekStart,
                    r = a.daysMin;
                n = parseInt(n, 10) % 7, r = r.slice(n).concat(r.slice(0, n)), t.each(r, function(t, e) {
                    s.push(i.createItem({
                        text: e
                    }))
                }), this.$week.html(s.join(""))
            },
            renderYears: function t() {
                var e, i = this.options,
                    s = this.startDate,
                    a = this.endDate,
                    n = i.disabledClass,
                    r = i.filter,
                    h = i.yearSuffix,
                    o = this.viewDate.getFullYear(),
                    l = new Date().getFullYear(),
                    c = this.date.getFullYear(),
                    d = [],
                    u = !1,
                    f = !1;
                for (e = -5; e <= 6; e += 1) {
                    var p = new Date(o + e, 1, 1),
                        g = !1;
                    s && (g = p.getFullYear() < s.getFullYear(), -5 === e && (u = g)), !g && a && (g = p.getFullYear() > a.getFullYear(), 6 === e && (f = g)), !g && r && (g = !1 === r.call(this.$element, p, "year"));
                    var y = o + e === c,
                        v = y ? "year picked" : "year";
                    d.push(this.createItem({
                        picked: y,
                        disabled: g,
                        text: o + e,
                        view: g ? "year disabled" : v,
                        highlighted: p.getFullYear() === l
                    }))
                }
                this.$yearsPrev.toggleClass(n, u), this.$yearsNext.toggleClass(n, f), this.$yearsCurrent.toggleClass(n, !0).html("".concat(o + -5 + h, " - ").concat(o + 6).concat(h)), this.$years.html(d.join(""))
            },
            renderMonths: function e() {
                var i, s = this.options,
                    a = this.startDate,
                    n = this.endDate,
                    r = this.viewDate,
                    h = s.disabledClass || "",
                    o = s.monthsShort,
                    l = t.isFunction(s.filter) && s.filter,
                    c = r.getFullYear(),
                    d = new Date,
                    u = d.getFullYear(),
                    f = d.getMonth(),
                    p = this.date.getFullYear(),
                    g = this.date.getMonth(),
                    y = [],
                    v = !1,
                    m = !1;
                for (i = 0; i <= 11; i += 1) {
                    var w = new Date(c, i, 1),
                        k = !1;
                    a && (k = (v = w.getFullYear() === a.getFullYear()) && w.getMonth() < a.getMonth()), !k && n && (k = (m = w.getFullYear() === n.getFullYear()) && w.getMonth() > n.getMonth()), !k && l && (k = !1 === l.call(this.$element, w, "month"));
                    var _ = c === p && i === g,
                        D = _ ? "month picked" : "month";
                    y.push(this.createItem({
                        disabled: k,
                        picked: _,
                        highlighted: c === u && w.getMonth() === f,
                        index: i,
                        text: o[i],
                        view: k ? "month disabled" : D
                    }))
                }
                this.$yearPrev.toggleClass(h, v), this.$yearNext.toggleClass(h, m), this.$yearCurrent.toggleClass(h, v && m).html(c + s.yearSuffix || ""), this.$months.html(y.join(""))
            },
            renderDays: function t() {
                var e, i, s, a = this.$element,
                    n = this.options,
                    r = this.startDate,
                    h = this.endDate,
                    o = this.viewDate,
                    l = this.date,
                    c = n.disabledClass,
                    d = n.filter,
                    u = n.months,
                    f = n.weekStart,
                    p = n.yearSuffix,
                    g = o.getFullYear(),
                    y = o.getMonth(),
                    v = new Date,
                    m = v.getFullYear(),
                    w = v.getMonth(),
                    k = v.getDate(),
                    _ = l.getFullYear(),
                    D = l.getMonth(),
                    b = l.getDate(),
                    $ = [],
                    C = g,
                    x = y,
                    Y = !1;
                0 === y ? (C -= 1, x = 11) : x -= 1, e = F(C, x);
                var M = new Date(g, y, 1);
                for ((s = M.getDay() - parseInt(f, 10) % 7) <= 0 && (s += 7), r && (Y = M.getTime() <= r.getTime()), i = e - (s - 1); i <= e; i += 1) {
                    var S = new Date(C, x, i),
                        T = !1;
                    r && (T = S.getTime() < r.getTime()), !T && d && (T = !1 === d.call(a, S, "day")), $.push(this.createItem({
                        disabled: T,
                        highlighted: C === m && x === w && S.getDate() === k,
                        muted: !0,
                        picked: C === _ && x === D && i === b,
                        text: i,
                        view: "day prev"
                    }))
                }
                var V = [],
                    P = g,
                    I = y,
                    N = !1;
                11 === y ? (P += 1, I = 0) : I += 1, e = F(g, y), s = 42 - ($.length + e);
                var j = new Date(g, y, e);
                for (h && (N = j.getTime() >= h.getTime()), i = 1; i <= s; i += 1) {
                    var A = new Date(P, I, i),
                        O = P === _ && I === D && i === b,
                        H = !1;
                    h && (H = A.getTime() > h.getTime()), !H && d && (H = !1 === d.call(a, A, "day")), V.push(this.createItem({
                        disabled: H,
                        picked: O,
                        highlighted: P === m && I === w && A.getDate() === k,
                        muted: !0,
                        text: i,
                        view: "day next"
                    }))
                }
                var q = [];
                for (i = 1; i <= e; i += 1) {
                    var E = new Date(g, y, i),
                        W = !1;
                    r && (W = E.getTime() < r.getTime()), !W && h && (W = E.getTime() > h.getTime()), !W && d && (W = !1 === d.call(a, E, "day"));
                    var z = g === _ && y === D && i === b,
                        J = z ? "day picked" : "day";
                    q.push(this.createItem({
                        disabled: W,
                        picked: z,
                        highlighted: g === m && y === w && E.getDate() === k,
                        text: i,
                        view: W ? "day disabled" : J
                    }))
                }
                this.$monthPrev.toggleClass(c, Y), this.$monthNext.toggleClass(c, N), this.$monthCurrent.toggleClass(c, Y && N).html(n.yearFirst ? "".concat(g + p, " ").concat(u[y]) : "".concat(u[y], " ").concat(g).concat(p)), this.$days.html($.join("") + q.join("") + V.join(""))
            }
        }, {
            click: function e(i) {
                var s = t(i.target),
                    a = this.options,
                    n = this.date,
                    r = this.viewDate,
                    h = this.format;
                if (i.stopPropagation(), i.preventDefault(), !s.hasClass("disabled")) {
                    var o = s.data("view"),
                        l = r.getFullYear(),
                        c = r.getMonth(),
                        d = r.getDate();
                    switch (o) {
                        case "years prev":
                        case "years next":
                            l = "years prev" === o ? l - 10 : l + 10, r.setFullYear(l), r.setDate(Y(l, c, d)), this.renderYears();
                            break;
                        case "year prev":
                        case "year next":
                            l = "year prev" === o ? l - 1 : l + 1, r.setFullYear(l), r.setDate(Y(l, c, d)), this.renderMonths();
                            break;
                        case "year current":
                            h.hasYear && this.showView(m.YEARS);
                            break;
                        case "year picked":
                            h.hasMonth ? this.showView(m.MONTHS) : (s.siblings(".".concat(a.pickedClass)).removeClass(a.pickedClass).data("view", "year"), this.hideView()), this.pick("year");
                            break;
                        case "year":
                            l = parseInt(s.text(), 10), n.setDate(Y(l, c, d)), n.setFullYear(l), r.setDate(Y(l, c, d)), r.setFullYear(l), h.hasMonth ? this.showView(m.MONTHS) : (s.addClass(a.pickedClass).data("view", "year picked").siblings(".".concat(a.pickedClass)).removeClass(a.pickedClass).data("view", "year"), this.hideView()), this.pick("year");
                            break;
                        case "month prev":
                        case "month next":
                            (c = "month prev" === o ? c - 1 : c + 1) < 0 ? (l -= 1, c += 12) : c > 11 && (l += 1, c -= 12), r.setFullYear(l), r.setDate(Y(l, c, d)), r.setMonth(c), this.renderDays();
                            break;
                        case "month current":
                            h.hasMonth && this.showView(m.MONTHS);
                            break;
                        case "month picked":
                            h.hasDay ? this.showView(m.DAYS) : (s.siblings(".".concat(a.pickedClass)).removeClass(a.pickedClass).data("view", "month"), this.hideView()), this.pick("month");
                            break;
                        case "month":
                            c = t.inArray(s.text(), a.monthsShort), n.setFullYear(l), n.setDate(Y(l, c, d)), n.setMonth(c), r.setFullYear(l), r.setDate(Y(l, c, d)), r.setMonth(c), h.hasDay ? this.showView(m.DAYS) : (s.addClass(a.pickedClass).data("view", "month picked").siblings(".".concat(a.pickedClass)).removeClass(a.pickedClass).data("view", "month"), this.hideView()), this.pick("month");
                            break;
                        case "day prev":
                        case "day next":
                        case "day":
                            "day prev" === o ? c -= 1 : "day next" === o && (c += 1), d = parseInt(s.text(), 10), n.setDate(1), n.setFullYear(l), n.setMonth(c), n.setDate(d), r.setDate(1), r.setFullYear(l), r.setMonth(c), r.setDate(d), this.renderDays(), "day" === o && this.hideView(), this.pick("day");
                            break;
                        case "day picked":
                            this.hideView(), this.pick("day")
                    }
                }
            },
            globalClick: function t(e) {
                for (var i = e.target, s = this.element, a = this.$trigger[0], n = !0; i !== document;) {
                    if (i === a || i === s) {
                        n = !1;
                        break
                    }
                    i = i.parentNode
                }
                n && this.hide()
            },
            keyup: function t() {
                this.update()
            },
            globalKeyup: function t(e) {
                var i = e.target,
                    s = e.key,
                    a = e.keyCode;
                this.isInput && i !== this.element && this.shown && ("Tab" === s || 9 === a) && this.hide()
            },
            touchstart: function e(i) {
                var s = i.target;
                this.isInput && s !== this.element && !t.contains(this.$picker[0], s) && (this.hide(), this.element.blur())
            }
        }, {
            show: function e() {
                this.built || this.build(), !(this.shown || this.trigger(p).isDefaultPrevented()) && (this.shown = !0, this.$picker.removeClass(y).on(h, t.proxy(this.click, this)), this.showView(this.options.startView), this.inline || (this.$scrollParent.on(f, t.proxy(this.place, this)), t(window).on(u, this.onResize = C(this.place, this)), t(document).on(h, this.onGlobalClick = C(this.globalClick, this)), t(document).on(c, this.onGlobalKeyup = C(this.globalKeyup, this)), n && t(document).on(g, this.onTouchStart = C(this.touchstart, this)), this.place()))
            },
            hide: function e() {
                !(!this.shown || this.trigger(l).isDefaultPrevented()) && (this.shown = !1, this.$picker.addClass(y).off(h, this.click), !this.inline && (this.$scrollParent.off(f, this.place), t(window).off(u, this.onResize), t(document).off(h, this.onGlobalClick), t(document).off(c, this.onGlobalKeyup), n && t(document).off(g, this.onTouchStart)))
            },
            toggle: function t() {
                this.shown ? this.hide() : this.show()
            },
            update: function t() {
                var e = this.getValue();
                e !== this.oldValue && (this.setDate(e, !0), this.oldValue = e)
            },
            pick: function t(e) {
                var i = this.$element,
                    s = this.date;
                !this.trigger(d, {
                    view: e || "",
                    date: s
                }).isDefaultPrevented() && (s = this.formatDate(this.date), this.setValue(s), this.isInput && (i.trigger("input"), i.trigger("change")))
            },
            reset: function t() {
                this.setDate(this.initialDate, !0), this.setValue(this.initialValue), this.shown && this.showView(this.options.startView)
            },
            getMonthName: function e(i, s) {
                var a = this.options,
                    n = a.monthsShort,
                    r = a.months;
                return t.isNumeric(i) ? i = Number(i) : b(s) && (s = i), !0 === s && (r = n), r[D(i) ? i : this.date.getMonth()]
            },
            getDayName: function e(i, s, a) {
                var n = this.options,
                    r = n.days;
                return t.isNumeric(i) ? i = Number(i) : (b(a) && (a = s), b(s) && (s = i)), a ? r = n.daysMin : s && (r = n.daysShort), r[D(i) ? i : this.date.getDay()]
            },
            getDate: function t(e) {
                var i = this.date;
                return e ? this.formatDate(i) : new Date(i)
            },
            setDate: function e(i, s) {
                var a = this.options.filter;
                if ($(i) || k(i)) {
                    if (i = this.parseDate(i), t.isFunction(a) && !1 === a.call(this.$element, i, "day")) return;
                    this.date = i, this.viewDate = new Date(i), s || this.pick(), this.built && this.render()
                }
            },
            setStartDate: function t(e) {
                $(e) || k(e) ? this.startDate = this.parseDate(e) : this.startDate = null, this.built && this.render()
            },
            setEndDate: function t(e) {
                $(e) || k(e) ? this.endDate = this.parseDate(e) : this.endDate = null, this.built && this.render()
            },
            parseDate: function e(i) {
                var s = this.format,
                    a = [];
                return $(i) || (k(i) && (a = i.match(T) || []), i = i ? new Date(i) : new Date, $(i) || (i = new Date), a.length === s.parts.length && (t.each(a, function(t, e) {
                    var a = parseInt(e, 10);
                    switch (s.parts[t]) {
                        case "yy":
                            i.setFullYear(2e3 + a);
                            break;
                        case "yyyy":
                            i.setFullYear(2 === e.length ? 2e3 + a : a);
                            break;
                        case "mm":
                        case "m":
                            i.setMonth(a - 1)
                    }
                }), t.each(a, function(t, e) {
                    var a = parseInt(e, 10);
                    switch (s.parts[t]) {
                        case "dd":
                        case "d":
                            i.setDate(a)
                    }
                }))), new Date(i.getFullYear(), i.getMonth(), i.getDate())
            },
            formatDate: function e(i) {
                var s = this.format,
                    a = "";
                if ($(i)) {
                    var n = i.getFullYear(),
                        r = i.getMonth(),
                        h = i.getDate(),
                        o = {
                            d: h,
                            dd: S(h, 2),
                            m: r + 1,
                            mm: S(r + 1, 2),
                            yy: String(n).substring(2),
                            yyyy: S(n, 4)
                        };
                    a = s.source, t.each(s.parts, function(t, e) {
                        a = a.replace(e, o[e])
                    })
                }
                return a
            },
            destroy: function t() {
                this.unbind(), this.unbuild(), this.$element.removeData(r)
            }
        }), t.fn) {
        var O = t.fn.datepicker;
        t.fn.datepicker = function e(i) {
            for (var s, a = arguments.length, n = Array(a > 1 ? a - 1 : 0), h = 1; h < a; h++) n[h - 1] = arguments[h];
            return this.each(function(e, a) {
                var h = t(a),
                    o = "destroy" === i,
                    l = h.data(r);
                if (!l) {
                    if (o) return;
                    var c = t.extend({}, h.data(), t.isPlainObject(i) && i);
                    l = new A(a, c), h.data(r, l)
                }
                if (k(i)) {
                    var d = l[i];
                    t.isFunction(d) && (s = d.apply(l, n), o && h.removeData(r))
                }
            }), b(s) ? this : s
        }, t.fn.datepicker.Constructor = A, t.fn.datepicker.languages = v, t.fn.datepicker.setDefaults = A.setDefaults, t.fn.datepicker.noConflict = function e() {
            return t.fn.datepicker = O, this
        }
    }
});